{"version":3,"sources":["app.js","controllers.js","directives.js","filters.js","services.js","survey.js","tradeoff.js","overlap.js","results.js"],"names":[],"mappings":"AAAA;AACA,ACDA,mLDCmL,wCAAA;ACAnL,ACDA,EFEE,iDCDiD,OAAO,GAAG,+EAAA;ACA7D,ACDA,EFEE,EDCE,6CEF6C,KAAK,GAAG,uBAAA;ACAzD,ACDA,EHGE,ACDA,EFEE,aAAa,UAAU,gBGHgB,MAAM;ACAjD,ACDA,ELKE,AGHA,EFEE,ACDA,yCEFyC,IAAI,GAAG,8CAAA;ACApD,ACDA,EFEE,EJIE,AEFA,ACDA,EFEE,wCIJwC,WAAW,GAAG,mDAAA;AED5D,ADCA,EHGE,ACDA,ACDA,ELKE,ACDA,ACDA,aFEa,SAAS,sBMNsB,SAAS,GAAG,oGAAA;AHI5D,AIJA,ACDA,ERQE,ACDA,AGHA,ACDA,ACDA,IJII,KCDK,MAAM,2BIJ2B,OAAO,GAAG,8BAAA;ACAtD,EPOE,AEFA,AIJA,AHGA,AEFA,ENME,AKLA,IHGI,sCMNsC,QAAQ,GAAG,uBAAA;EPQvD,AMNA,ACDA,AJIA,ACDA,ACDA,ENME,AGHA,EDCE,WFEW,OAAO;EACtB,ACDA,AEFA,AIJA,AFEA,ACDA,EEFE,AJIA,EFEE;ACAN,EFEE,AMNA,AHGA,ACDA,ELKE,AQRA,AFEA,IJII,GCDG,OAAO;EAChB,AIJA,AHGA,EJIE,ACDA,AIJA,ACDA,EJIE,AMNA,WRQW,QAAQ;EACvB,AOPA,ENME,AEFA,ACDA,ACDA,EGHE,AFEA,EJIE;EDEN,AEFA,AIJA,EPOE,AQRA,AJIA,EFEE,AGHA,ECDE;AHIR,EFEE,EDCE,AOPA,ACDA,AJIA,ACDA,EHGE,AIJA,KHGK,MHGM,IGHI,MHGM;EACzB,ACDA,AEFA,AIJA,EFEE,ACDA,EJIE,AMNA,AJIA;EHIJ,AMNA,ADCA,ENME,AGHA,AEFA,EGHE,AJIA,EFEE;ECAN,AGHA,ENME,ACDA,AMNA,AHGA,ACDA,EGHE,ENME,SFES,QAAQ;AGFzB,EHGE,ECDE,AMNA,ADCA,EFEE,ACDA,EGHE,INMI;IFGR,AKLA,EJIE,AMNA,ACDA,AFEA,EJIE,AEFA;IJKJ,AKLA,ACDA,ELKE,AOPA,ENME,AKLA,AHGA,SJIS,OAAO;EACtB,AMNA,ELKE,EGHE,ACDA,EHGE,AKLA,ACDA;IRSJ,ACDA,AIJA,ACDA,EEFE,ENME,AEFA,EGHE;EFGR,ELKE,AMNA,ELKE,ECDE,AMNA,AJIA,EGHE,OPOO,QAAQ;AKJzB,CAAC,CLKC,AKLD,ECDG,EEFE,AJIA,EHGE,ACDA,EKLE,MFEK,UAAU,GAAG,sEAAA;EAC1B,ACDA,ENME,AIJA,EIJE,EPOE,ACDA,EKLE;EFGR,ACDA,ENME,AIJA,EHGE,ECDE,AMNA,EDCE,OPOO,UAAU;EACzB,AIJA,ECDE,ACDA,EEFE,EPOE,AMNA,ELKE;EEDR,EJIE,AKLA,ACDA,ECDE,ACDA,EPOE,ACDA;EGFN,ELKE,AOPA,AHGA,AEFA,ELKE,ECDE,AMNA,SRQS,QAAQ;EACvB,AOPA,AFEA,EDCE,EIJE,AFEA,ELKE,ECDE;EKJR,AFEA,ELKE,AIJA,AEFA,EEFE,IPOI,ICDI;AKJd,CAAC,CAAA,ADCC,ENME,AKLA,EGHE,AJIA,IHGI,ACDA,GKLE,GAAG,CPOE,EOPC,MPOO,wDOPP;ADElB,CAAC,CNMC,AOPA,ADCD,IFEK,ACDA,EGHE,EPOE,ECDE,IIJG,OAAO,GAAG,oEAAA;ECAvB,ADCA,ENME,AIJA,ACDA,EGHE,EPOE,ICDI;EKJV,AFEA,ACDA,ENME,EQRE,AJIA,IHGI,ACDA,OFEO,SAAS;EACxB,AOPA,AFEA,ACDA,IEFI,EJIE,EHGE,ACDA;IFGN,AOPA,AFEA,ACDA,IEFI,EJIE,EHGE,ACDA;EKJV,ADCA,ENME,EKLE,EDCE,EIJE,EPOE,ACDA,KFEK,SAAS;EACxB,AOPA,ADCA,MFEM,ACDA,EJIE,ACDA,EMNE;IRSR,AOPA,ADCA,IFEI,ACDA,EHGE,EDCE,AOPA;EDEV,EPOE,AMNA,EFEE,ACDA,IHGI,AMNA,EPOE,KDCK,QAAQ;EACvB,AOPA,ADCA,MEFM,AJIA,ACDA,EJIE,ACDA;AFGV,CAAC,CAAA,AMNC,ECDE,ICDI,AJIA,ACDA,EJIE,ECDE;IKJR,ADCA,EFEE,ACDA,EJIE,ECDE,AMNA;IJKN,AEFA,ELKE,AMNA,EFEE,EHGE,EMNE;IPQR,AGHA,AEFA,ICDI,AFEA,EHGE,AMNA;EPQR,AGHA,ECDE,EEFE,ADCA,MJIM,AMNA;EPQV,AGHA,ACDA,MEFM,ADCA,EEFE,ENME;AGFZ,CAAC,CAAA,EJIG,AGHA,EGHE,ECDE,AFEA,IJII,CGHA,MAAM,GAAG,kBAAA;EACnB,EJIE,EGHE,AEFA,ECDE,ACDA,MNMM;EGFZ,IJII,AMNA,AHGA,EIJE,AFEA,MJIM;EGFZ,EEFE,AHGA,EHGE,AKLA,EEFE,MNMM;EEDZ,ACDA,ECDE,ELKE,AMNA,ICDI,INMI;EEDZ,AEFA,ELKE,AIJA,IEFI,ACDA,INMI;AIHZ,CAAC,CAAA,ELKG,AGHA,ACDA,EEFE,ECDE,ENME,MIJK,QAAQ,GAAG,oEAAA;EACxB,EFEE,EHGE,AIJA,EHGE,AKLA,ECDE;EJKR,AEFA,EDCE,EHGE,AKLA,ENME,IOPI;EJKV,AEFA,EJIE,EGHE,EJIE,AMNA,MCDM;ENOZ,EEFE,AEFA,ELKE,AMNA,EFEE,IGHI;ANOZ,CAAC,CAAA,EKLG,ADCA,EFEE,EHGE,AIJA,MGHM,CNMA,KAAK,GAAG,mCAAA;EACpB,AKLA,EDCE,ILKI,AGHA,ECDE,EGHE;EDEV,ELKE,AIJA,ELKE,IOPI,AJIA,ECDE;IHIR,AKLA,EDCE,ELKE,AOPA,AJIA,ACDA;IHIJ,AEFA,EGHE,ENME,AIJA,ACDA,EEFE;EJKR,IHGI,ACDA,AKLA,AFEA,EGHE,EFEE;EFGR,ECDE,EHGE,AKLA,ENME,EOPE,AFEA;ICAN,AHGA,ACDA,IHGI,AMNA,AFEA,ELKE;EIHR,EEFE,AHGA,EFEE,IMNI,AFEA,ELKE;EIHV,EEFE,ELKE,AEFA,EIJE,EPOE,AKLA;IFGN,ACDA,EEFE,ENME,ACDA,AMNA,AFEA;EDEN,EEFE,ELKE,AEFA,AEFA,ILKI,AOPA;EHIR,ECDE,ECDE,ELKE,AEFA,EHGE,EOPE;IHIR,ACDA,EJIE,EKLE,ENME,AGHA,IIJI;MNOR,AGHA,ACDA,ECDE,INMI,AOPA,AJIA;ICAR,EHGE,AIJA,ECDE,INMI,AGHA,EIJE;EHIZ,IEFI,ELKE,AIJA,ELKE,AGHA,EIJE;EHIV,EEFE,EHGE,EEFE,EJIE,AMNA,EPOE;IGFR,ACDA,EEFE,ADCA,EJIE,AMNA,IPOI;IGFR,ACDA,EHGE,EKLE,ADCA,ELKE,AOPA;EJKR,ECDE,EHGE,EKLE,ACDA,AFEA,ILKI;EGFV,ICDI,ACDA,EJIE,AKLA,ECDE,EPOE;IGFR,AEFA,ECDE,ELKE,AMNA,AHGA,EJIE;EGFR,EGHE,ADCA,IJII,EDCE,AOPA,AHGA;EEDR,AHGA,IEFI,ELKE,ACDA,AMNA,AHGA;EEDN,EHGE,EHGE,ECDE,AMNA,AHGA,ACDA;ILMJ,AMNA,AHGA,AEFA,EDCE,EHGE,EMNE;EFGR,ELKE,AMNA,AFEA,EDCE,EFEE,IMNI;EFGV,EDCE,EJIE,AMNA,AHGA,EFEE,MMNM;EHIZ,ECDE,ECDE,ENME,ACDA,AEFA,IIJI;EHIV,ACDA,EFEE,IHGI,AMNA,ELKE,IMNI;EJKZ,AEFA,EDCE,IJII,ACDA,AKLA,ICDI;EJKV,EEFE,ELKE,AIJA,EHGE,EKLE,ACDA;IJKN,ACDA,ACDA,ILKI,ACDA,AMNA,EDCE;IHIN,AEFA,ELKE,AIJA,EHGE,AKLA,ECDE;IPQN,AIJA,ACDA,ECDE,AHGA,EFEE,AMNA;EPQN,AIJA,ECDE,ECDE,ACDA,EJIE,EFEE;ADEV,CAAC,CAAA,AIJC,ACDA,EEFE,IDCI,EHGE,IFEI,EDCC,SAAS,GAAG,WAAA;EACzB,AOPA,AFEA,EDCE,IEFI,AHGA,EFEE;AMLV,CAAC,CPOC,AOPD,EJIG,AEFA,ECDE,AFEA,QHGQ,CMNA,KAAK,GAAG,oBAAA;EACpB,EPOE,AMNA,AHGA,AEFA,IDCI,MHGM;EDEZ,AGHA,EGHE,ACDA,AFEA,EDCE,UHGU;EDEd,AMNA,AHGA,EIJE,AHGA,ECDE,UJIU;AEDhB,CAAC,CHGC,AMNA,AHGD,ACDC,EGHE,AFEA,SFEQ,CFEE,MEFK,GAAG,4BAAA;AGFtB,CAAC,CAAA,AHGC,ACDA,ACDA,ELKE,EOPE,ODCM,GLKI,CKLA,GAAG,8DAAA;AFGnB,ACDA,CDCC,ACDA,CLKC,AMNA,AFED,ACDA,EFEG,EIJE,UNMU,AIJD,YAAY,GAAG,2CAAA;ELM5B,AMNA,ADCA,EFEE,IIJI,MNMM;EDEZ,AMNA,EHGE,AEFA,EEFE,UNMU;ADEhB,CAAC,CAAA,AMNC,EHGE,AEFA,EEFE,UNMU;EKJd,EHGE,EEFE,EEFE,MNMM;EKJZ,EHGE,EIJE,AFEA,UJIU;IKJZ,AHGA,AEFA,IEFI,QNMQ;EKJd,EHGE,AEFA,MEFM,INMI;IKJV,AHGA,EIJE,AFEA,UJIU;IEDZ,EGHE,ACDA,EFEE,QJIQ;IEDZ,EGHE,ACDA,EFEE,MJIM;IEDV,EGHE,ADCA,EEFE,INMI;IKJR,AHGA,IFEI,AIJA,EEFE;IDEN,AHGA,IFEI,AIJA,IEFI;IJKR,EGHE,ADCA,IJII,AMNA;IJKN,EGHE,ELKE,AIJA,EEFE;IDEN,AHGA,MFEM,AIJA,EEFE;IJKR,EGHE,ELKE,EIJE,EEFE;IDER,AHGA,IFEI,EMNE,AFEA;ICAN,AHGA,IFEI,AMNA,EFEE;EFGR,IGHI,ECDE,AFEA,EJIE;EEDR,IGHI,ILKI,AMNA,AFEA;EFGR,MGHM,ELKE,AMNA,AFEA;IFGN,EGHE,ILKI,AMNA,EFEE;IFGR,IGHI,ELKE,AMNA,EFEE;MCAN,AHGA,IIJI,AFEA,EJIE;IKJR,EHGE,EIJE,ENME,EIJE;ICAR,ICDI,AJIA,EFEE,EIJE;ICAR,EHGE,EIJE,ENME,AIJA;MCAJ,ACDA,EJIE,EEFE,EJIE;MKJN,ACDA,AJIA,EEFE,EJIE;MKJJ,AHGA,AEFA,EJIE,AMNA;IDEJ,ADCA,EJIE,EMNE,AJIA;EGFN,ADCA,EJIE,EEFE,EIJE;AFGR,CAAC,CJIC,AKLA,ADCD,MEFO,AJIA,KEFI,QAAQ;AJKpB,CAAC,CAAA,AIJC,ECDE,ICDI,AJIA,OFEM,GAAG,GAAG,kCAAA;EAClB,AIJA,ECDE,EHGE,EIJE;EFGN,EJIE,AEFA,EGHE,ECDE;EFGN,EJIE,AEFA,EGHE,ECDE;EJKN,AEFA,IJII,AKLA,ECDE;EJKN,AEFA,IJII,EKLE,ACDA;EFGN,EFEE,EFEE,EKLE,ACDA;IFGJ,EJIE,AEFA,EGHE,ACDA;INOJ,EIJE,EEFE,EDCE,AHGA;IFGN,AIJA,EFEE,EIJE,EDCE;IHIN,EFEE,AIJA,IEFI,EDCE;EHIV,EEFE,EJIE,EMNE,EDCE;EHIR,IEFI,EJIE,AKLA,ECDE;AJKV,CAAC,CAAA,EEFG,EJIE,EKLE,ACDA,KJII,KAAK,GAAG,YAAA;EAClB,IFEI,AIJA,ECDE,ACDA;IJKJ,AEFA,ECDE,ACDA,ENME;IKJJ,ACDA,AJIA,EFEE,AIJA;EEDJ,EDCE,AHGA,AEFA,EJIE;AMLN,CAAC,CDCC,ACDD,AFEC,EFEE,IFEI,QMNO,QAAQ,GAAG,gCAAA;EDExB,ACDA,AJIA,AEFA,IJII;AKJN,CAAC,CAAA,AHGC,EIJE,AFEA,EJIE,OKLM,IAAI,GAAG,sDAAA;EACjB,ECDE,AJIA,AEFA,IJII;EKJN,ECDE,ENME,AEFA,AEFA;ECAJ,ECDE,AJIA,AEFA,EJIE;EKJJ,ICDI,AJIA,AEFA,EJIE;EKJN,EHGE,AEFA,EJIE,AMNA;EDEJ,AHGA,IFEI,AIJA,EEFE;AJKR,CAAC,CGHC,AHGD,EEFG,IJII,AMNA,KJII,KAAK;EGFf,AHGA,AEFA,IJII,EMNE;EDEN,ADCA,EFEE,IFEI,AMNA;AFGR,ICDI,AHGA,EFEE,AMNA,MFEM,OAAO,GAAG,0CAAA;EACpB,EEFE,AJIA,EFEE,AKLA;ECAJ,AFEA,IJII,AKLA,AHGA;AIHN,CAAC,CAAA,AFEC,EFEE,EFEE,AKLA;IACF,AHGA,AEFA,IJII;IKJJ,ADCA,EFEE,EFEE;IEDJ,EGHE,ADCA,EJIE;IKJJ,AHGA,AEFA,IJII;EIHN,EFEE,EGHE,ELKE;EIHN,ICDI,AHGA,EFEE;EIHN,ECDE,EHGE,EFEE;EIHN,EFEE,EGHE,ELKE;EIHN,EFEE,IFEI,AKLA;EDEN,IFEI,EFEE,AKLA;EDEN,EFEE,IFEI,AKLA;EHIN,EEFE,IJII,EKLE;AHIV,IEFI,IJII,EKLE;EDER,MCDM,ELKE;EIHR,ICDI,ELKE;IIHJ,ECDE,ELKE;IKJJ,EDCE,IJII;EKJR,EDCE,IJII;EKJN,IDCI,EJIE;IKJJ,ADCA,IJII;IKJJ,EDCE,EJIE;MKJF,ELKE,AIJA;MACF,ECDE,ELKE;MIHJ,EJIE,AKLA;QACA,ADCA,EJIE;MIHJ,ECDE,ELKE;QKJF,ADCA,EJIE;MKJJ,ADCA,IJII;IKJN,ADCA,MJIM;IKJN,EDCE,IJII;EKJR,EDCE,MJIM;EKJR,ADCA,MJIM;EIHN,ECDE,MLKM;IKJN,ADCA,MJIM;MKJJ,ADCA,IJII;MIHJ,ECDE,ELKE;MIHJ,IJII,AKLA;IDEN,MJIM,AKLA;IDEN,IJII,EKLE;MDEJ,IJII,AKLA;IDEN,ICDI,ELKE;EIHR,ICDI,ELKE;EIHN,ECDE,MLKM;EKJR,EDCE,MJIM;EKJR,EDCE,IJII;AKJR,CAAC,CAAA,ILKK,AIJA,UCDS,QAAQ,GAAG,oDAAA;EACxB,ELKE,EIJE;EJKJ,AKLA,IDCI;AJKN,CAAC,CAAA,AKLC,EDCE,WJIU,GAAG,GAAG,YAAA;EAClB,EKLE,ADCA;ECAF,ELKE,AIJA;ECAF,ELKE,EIJE;IJKF,AKLA,ADCA;ICAA,ADCA,EJIE;EKJJ,ADCA,IJII;EKJJ,ADCA,IJII;IKJF,ADCA,IJII;IKJJ,ELKE,AIJA;ICAF,ELKE,AIJA;MCAA,ADCA,EJIE;IKJJ,ELKE,AIJA;ECAJ,IDCI,EJIE;AKJR,CAAC,CAAA,ILKK,AIJA,UCDS,OAAO,GAAG,6EAAA;EACvB,ILKI,AIJA;ECAJ,EDCE,IJII;EKJN,ADCA,MJIM;EKJN,ADCA,MJIM;AIHR,CAAC,CAAA,ECDG,MLKM,GIJE,KAAK,GAAG,mDAAA;EAClB,ICDI,ILKI;EIHR,ECDE,MLKM;EKJR,ADCA,QJIQ;EKJR,ADCA,QJIQ;EIHR,ECDE,ILKI;EIHN,ECDE,ELKE;EIHJ,EJIE,EKLE;ELMJ,EIJE,ICDI;ALMR,CAAC,CAAA,EIJG,ECDE,SLKQ,IAAI,GAAG,YAAA;EACnB,EKLE,EDCE;ECAJ,ELKE,EIJE;ECAJ,ELKE,AIJA;IJKA,AKLA,EDCE;ICAF,ADCA,EJIE;EKJJ,EDCE,EJIE;EKJJ,IDCI,EJIE;IKJJ,ELKE,AIJA;ICAF,ELKE,EIJE;ICAJ,EDCE,EJIE;MACF,AKLA,EDCE;MCAF,ADCA,EJIE;IKJJ,ADCA,EJIE;EKJJ,EDCE,EJIE;AKJN,CAAC,CAAA,EDCG,IJII,QKLO,QAAQ,GAAG,8EAAA;EACxB,ILKI,AIJA;ECAJ,ILKI,AIJA;ECAJ,IDCI,EJIE;IKJJ,ADCA,IJII;EKJN,ADCA,MJIM;EKJN,ADCA,IJII;IACF,AKLA,ADCA;EJKF,EKLE,ADCA;AJKJ,CAAC,CAAA,IKLK,ADCA,SJIQ,IAAI,GAAG,YAAA;EACnB,IIJI,ECDE;ILMJ,EKLE,ADCA;IJKF,AKLA,IDCI;ECAN,ELKE,IIJI;ECAN,ILKI,IIJI;ICAN,ILKI,AIJA;ICAJ,ELKE,EIJE;ECAN,ELKE,MIJM;EJKR,AKLA,QDCQ;AJKV,CAAC,CAAA,EKLG,QDCQ;ICAR,MDCM;ICAN,IDCI;MCAF,EDCE;MCAF,EDCE;ICAJ,IDCI;ECAN,IDCI;ACAN,CAAC,CAAA,EDCG;IACA;EACF;EACA;AACF,CAAC,CAAA,WAAW,GAAG,GAAG,4DAAA;EAChB;EACA;EACA;EACA;IACE;EACF;EACA;EACA;EACA;IACE;MACE;MACA;IACF;MACE;IACF;IACA;MACE;MACA;QACE;MACF;QACE;MACF;IACF;IACA;IACA;MACE;MACA;MACA;IACF;EACF;EACA;IACE;IACA;MACE;MACA;MACA;QACE;QACA;QACA;UACE;UACA;YACE;UACF;QACF;QACA;QACA;MACF;IACF;IACA;EACF;EACA;AACF,CAAC,CAAA","file":"all.min.js","sourcesContent":["// var angular = require('angular')\n// var ngRoute = require('angular-route')\n// var _ = require('underscore')\n\nangular.module('well', [\n  'ngRoute',\n  'well.controllers',\n  'well.filters',\n  'well.services',\n  'well.directives',\n  'well.survey',\n  'well.tradeoff',\n  'well.overlap',\n  'well.results'\n])\n.config(function ($routeProvider, $locationProvider) {\n  $routeProvider\n    .when('/', {\n      templateUrl: 'landing.html'\n    })\n    .when('/auth', {\n      templateUrl: 'auth.html'\n    })\n    .when('/consent', {\n      templateUrl: 'consent.html'\n    })\n    .when('/terms', {\n      templateUrl: 'terms.html'\n    })\n    .when('/privacy', {\n      templateUrl: 'privacy.html'\n    })\n    // ThreeTwo Module\n    .when('/threetwo/survey', {\n      templateUrl: 'survey.html',\n      controller: 'SurveyCtrl'\n    })\n    .when('/threetwo/abbcca', {\n      templateUrl: 'tradeoff.html',\n      controller: 'ThreeCtrl'\n    })\n    .when('/threetwo/dbec', {\n      templateUrl: 'tradeoff.html',\n      controller: 'TwoCtrl'\n    })\n    .when('/threetwo/exit', {\n      templateUrl: 'exit.html',\n      controller: 'ExitCtrl'\n    })\n    // Overlap Module\n    .when('/overlap/survey', {\n      templateUrl: 'survey.html',\n      controller: 'SurveyCtrl'\n    })\n    .when('/overlap/abac', {\n      templateUrl: 'tradeoff.html',\n      controller: 'AbacCtrl'\n    })\n    .when('/overlap/abc', {\n      templateUrl: 'overlap.html',\n      controller: 'AbcCtrl'\n    })\n    .when('/overlap/exit', {\n      templateUrl: 'exit.html',\n      controller: 'ExitCtrl'\n    })\n    // Fine Overlap Module\n    .when('/fineoverlap/survey', {\n      templateUrl: 'survey.html',\n      controller: 'SurveyCtrl'\n    })\n    .when('/fineoverlap/tradeoff', {\n      templateUrl: 'fineoverlap.html',\n      controller: 'FineCtrl'\n    })\n    .when('/fineoverlap/exit', {\n      templateUrl: 'exit.html',\n      controller: 'ExitCtrl'\n    })\n    // Misc\n    .when('/chart', {\n      templateUrl: 'chart.html',\n      controller: 'ChartCtrl'\n    })\n    .when('/dummy', {\n      templateUrl: 'dummy.html',\n      controller: 'DummyCtrl'\n    })\n    .when('/test', {\n      templateUrl: 'test.html',\n      controller: 'TestCtrl'\n    })\n    .otherwise({\n      redirectTo: '/'\n    })\n\n  // $locationProvider.html5Mode(true)\n})\n","/* Controllers */\n\nangular.module('well.controllers', [])\n  .controller('AppCtrl', function ($scope, $rootScope, $timeout, User, $location, Aspects, Survey) {\n    $scope.aspects = {\n      texts: Aspects.texts\n    }\n    \n    $rootScope.$on('auth', () => {\n      Aspects.names().then(aspects => $scope.aspects.names = aspects)\n    })\n\n    Survey.getResponses()\n    $scope.responses = Survey.responses\n    $scope.user = User\n\n    $scope.settings = {\n      devmode: false,\n      instruct: true\n    }\n\n    $scope.landing = {\n      url: 'preamble.html'\n    }\n\n    $scope.loc = $location\n\n    $scope.login = {\n      wrong: false,\n      placeholder: {\n        email: 'Enter your email',\n        password: 'Password'\n      },\n      submit: function() {\n        if (!$scope.login.email) {\n          $scope.login.wrong = 'INVALID_EMAIL'\n          $scope.login.placeholder.email = 'Enter a valid email'\n        } else if (!$scope.login.password) {\n          $scope.login.wrong = 'INVALID_PASSWORD'\n          $scope.login.placeholder.email = 'Enter a valid password'\n        } else {\n          User.login(this.email, this.password).then(function(user) {\n            $scope.login.wrong = 'in'\n            console.log('Logged in as: ', user.uid)\n            $scope.landing.url = 'modules.html'\n          }, function (error) {\n            $scope.login.wrong = error.code\n            if (error.code === 'INVALID_EMAIL') {\n              $scope.login.email = ''\n              $scope.login.placeholder.email = 'Enter a valid email'\n            } else if (error.code === 'INVALID_PASSWORD') {\n              $scope.login.password = ''\n              $scope.login.placeholder.password = 'Enter a valid password'\n            }\n            console.error('Login failed: ', error)\n          })\n        }\n      }\n    }\n\n    $scope.signup = {\n      wrong: false,\n      placeholder: {\n        email: 'Enter your email',\n        password: 'Password',\n        confirm: 'Confirm password'\n      },\n      submit: function() {\n        if (!$scope.signup.email) {\n          $scope.signup.wrong = 'INVALID_EMAIL'\n          $scope.signup.placeholder.email = 'Enter a valid email'\n        } else if (!$scope.signup.password) {\n          $scope.signup.wrong = 'INVALID_PASSWORD'\n          $scope.signup.placeholder.email = 'Enter a valid password'\n        } else if ($scope.signup.password && $scope.signup.password && $scope.signup.password !== $scope.signup.confirm) {\n          $scope.signup.wrong = 'mismatch'\n          $scope.signup.confirm = ''\n        } else {\n          var promise = User.signup($scope.signup.email, $scope.signup.password)\n            .then(function () {\n              $timeout(() => $scope.landing.url = 'terms.html')\n            }, function (error) {\n              console.log(error)\n              $scope.signup.wrong = error.code\n              if (error.code === 'INVALID_EMAIL') {\n                $scope.signup.email = ''\n                $scope.signup.placeholder.email = 'Enter a valid email'\n              } else if (error.code === 'INVALID_PASSWORD') {\n                $scope.signup.password = ''\n                $scope.signup.placeholder.password = 'Enter a valid password'\n              } else if (error.code === 'EMAIL_TAKEN') {\n                $scope.signup.false = true\n                alert('The specified email address is already in use.')\n              }\n              console.error('Sign up failed: ', error)\n            })\n        }\n      },\n      agree: function () {\n        User.login($scope.signup.email, $scope.signup.password)\n          .then(function(user) {\n            $scope.login.wrong = 'in'\n            console.log('Logged in as: ', user.uid)\n            $scope.landing.url = 'modules.html'\n          }, function (error) {\n            console.log(error)\n          })\n      }\n    }\n  })\n  // .controller('AuthCtrl', function ($scope, User, $location) {\n  //   if (User.info !== null) $location.path('survey')\n  // })\n  .controller('DummyCtrl', function ($scope) {\n    var aspects = ['Following your passion', 'Being acknowledged for your work', 'Being treated fairly', 'Having meaningful relationships', 'Having a sense of purpose']\n    $scope.pairs = _.map(aspects, function (a, i) {\n      return [a, aspects[(i + 1) % 5]]\n    })\n    $scope.levels = {}\n    _.each(aspects, function (a) {\n      $scope.levels[a] = Math.round( ( Math.random() * 35 ) + 60)\n    })\n    $scope.selections = {}\n    console.log($scope.pairs, $scope.levels)\n  })","/* Directives */\n\nangular.module('well.directives', [])\n  .directive('earth', function ($window, Aspects) {\n    return {\n      restrict: 'EA',\n      scope: {},\n      link: function (scope, element, attrs) {\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        var splash = d3.select('.splash')\n\n        scope.render = function () {\n          splash.selectAll('.earth *').remove()\n\n          var width = window.innerWidth,\n              height = window.innerHeight\n\n          var projection = d3.geo.orthographic()\n              .precision(0)\n              .scale(500)\n              .translate([width / 2, height / 2])\n              .clipAngle(180)\n\n          var canvas = d3.select('.splash .earth').append('canvas')\n              .attr('width', width)\n              .attr('height', height)\n\n          var context = canvas.node().getContext('2d')\n\n          var path = d3.geo.path()\n              .projection(projection)\n              .context(context)\n\n          var delta = 0\n          var offset = 0\n          var ln = d3.random.logNormal(1)\n          _.each(scope.responses, function (resp) {\n            resp.rand = Math.random() * 20 + 10\n          })\n\n          d3.json('world-110m.json', function(error, world) {\n            var x, y = 0\n            window.onscroll = function () {\n              y = (window.pageYOffset || document.scrollTop)  - (document.clientTop || 0) || 0\n              rotate()\n            }\n\n            d3.select('body').on('mousemove', function () {\n              x = d3.mouse(this)[0]\n              rotate()\n            })\n\n            var land = topojson.feature(world, world.objects.land)\n            var countries = topojson.feature(world, world.objects.countries).features\n\n            _.each(countries, function (country) {\n              country.properties.color = Math.random()\n            })\n            rotate()\n\n            function rotate () {\n              projection.rotate([x * .1, y * .1, 30])\n              context.clearRect(0, 0, width, height)\n\n              _.each(countries, function (country) {\n                context.beginPath()\n                context.strokeStyle = d3.hsl(country.properties.color * x, 1, .8).toString()\n                path(country)\n                context.stroke()\n              })\n            }\n          })\n        }\n      }\n    }\n  })\n  .directive('range', function($window, $timeout, Aspects) {\n    return {\n      restrict: 'EA',\n      scope: {\n        level: '='\n      },\n      link: function(scope, element, attrs) {\n        var svg = d3.select(element[0])\n          .append('svg')\n          .style('width', '100%')\n          .style('height', 22)\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        var lastLevel = null\n        scope.$watch('level', function (level) {\n          if (level !== lastLevel) {\n            scope.render()\n          }\n        })\n\n        scope.render = function () {\n          svg.selectAll('*').remove()\n\n          var width = d3.select(element[0])[0][0].offsetWidth\n          var height = 22\n\n          var x = d3.scale.linear()\n              .domain([0, 100])\n              .range([6, width - 6])\n              .clamp(true)\n\n          var brush = d3.svg.brush()\n              .x(x)\n              .extent([scope.level, scope.level])\n              .on('brush', brushed)\n\n          var axis = svg.append('g')\n              .attr('class', 'axis')\n\n          axis.call(d3.svg.axis()\n              .scale(x)\n              .orient('bottom')\n              .tickSize(0)\n              .tickValues([]))\n          \n          var domain = axis.select('.domain')\n              .attr('transform', 'translate(0, 10)')\n\n          domain.select(function() { return this.parentNode.appendChild(this.cloneNode(true)); })\n              .attr('class', 'halo')\n\n          var slider = svg.append('g')\n              .attr('class', 'slider')\n              .call(brush)\n\n          slider.selectAll('.extent,.resize')\n              .remove()\n\n          slider.select('.background')\n              .attr('height', height)\n\n          var pointy = function () {\n            var cx = x(1),\n              cy = 10\n            return {\n              set: function (pt) {\n                cx = pt\n                return [\n                  { x: cx - 6, y: cy - 6 },\n                  { x: cx + 6, y: cy - 6 },\n                  { x: cx + 6, y: cy + 6 },\n                  { x: cx, y: cy + 10 },\n                  { x: cx - 6, y: cy + 6 }\n                ]\n              }\n\n            }\n          }\n\n          var line = d3.svg.line()\n            .x(function (d) { return d.x })\n            .y(function (d) { return d.y })\n\n          var handle = slider.append('path')\n              .attr('class', 'handle')\n              .attr('d', line(pointy().set(x(scope.level))) + 'Z')\n              .style('display', 'none')\n\n          // slider\n          //     .call(brush.event)\n\n          function brushed() {\n            var value = brush.extent()[0]\n\n            var v = x.invert(d3.mouse(this)[0])\n            value = isNaN(v) ? value : v\n            brush.extent([value, value])\n\n            if (value) value = Math.round(value)\n\n            handle\n              .style('display', 'block')\n              .attr('d', line( pointy().set( x(value) ) ) + 'Z')\n            \n            lastLevel = value\n            $timeout(function () {\n              scope.level = value\n            })\n          }\n        }\n      }\n    }\n  })\n  .directive('bar', function($window, Aspects, $filter) {\n    return {\n      restrict: 'E',\n      scope: {\n        level: '=',\n        diff: '=',\n        name: '=',\n        choice: '='\n      },\n      link: function(scope, element, attrs) {\n        var svg = d3.select(element[0])\n          .append('svg')\n          .style('width', '100%')\n          .style('height', 40)\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch('level', function () {\n          scope.render()\n        })\n\n        scope.$watch('diff', function (diff) {\n          scope.render()\n        })\n\n        scope.$watch('name', function () {\n          scope.render()\n        })\n\n        scope.$watch('choice', function () {\n          scope.render()\n        }, true)\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        var d = 0\n        var diffVal = 0\n\n        scope.render = function () {\n          svg.selectAll('*').remove()\n\n          var w = d3.select(element[0])[0][0].offsetWidth\n          var width = w > 0 ? w : 100\n          var height = 40\n\n          var x = d3.scale.linear()\n              .domain([0, 100])\n              .range([6, width - 6])\n\n          var axis = svg.append('g')\n              .attr('class', 'axis')\n              .attr('transform', 'translate(0,' + (height - 20) + ')')\n\n          axis.call(d3.svg.axis()\n              .scale(x)\n              .orient('bottom')\n              .tickSize(0)\n              .tickPadding(12))\n\n          axis.select('.domain').remove()\n\n          var backBar = svg.append('rect')\n              .attr('class', 'backbar')\n              .attr('x', x(0))\n              .attr('y', 4)\n              .attr('height', 20)\n              .attr('width', x(100) - x(0))\n\n          var barBack = svg.append('rect')\n              .attr('x', x(0))\n              .attr('y', 4)\n              .attr('height', 20)\n              .attr('width', x(100) - x(0))\n              .style('fill', '#eee')\n\n          var bar = svg.append('rect')\n              .attr('x', x(0))\n              .attr('y', 4)\n              .attr('height', 20)\n              .attr('width', x(scope.level) - x(0))\n              .style('fill', Aspects.getColor(scope.name, 100))\n\n          var diff = svg.append('rect')\n              .attr('y', 4)\n              .attr('height', 20)\n              .style('fill', Aspects.getColor(scope.name, 205))\n\n          var rightArrow = (start, end, y) => {\n            return 'M' + x(start) + ' ' + Number(y + 2) + ' L' + Number(x(end) - 4) + ' ' + Number(y + 2) +\n              ' L' + Number(x(end) - 4) + ' ' + y + ' L' + x(end) + ' ' + Number(y + 3) + ' L' + Number(x(end) - 4) + ' ' + Number(y + 6) +\n              ' L' + Number(x(end) - 4) + ' ' + Number(y + 4) + ' L' + x(start) + ' ' + Number(y + 4) + ' Z'\n          }\n\n          var leftArrow = (start, end, y) => {\n            return 'M' + x(start) + ' ' + Number(y + 2) + ' L' + Number(x(end) + 4) + ' ' + Number(y + 2) +\n              'L' + Number(x(end) + 4) + ' ' + y + ' L' + x(end) + ' ' + Number(y + 3) + ' L' + Number(x(end) + 4) + ' ' + Number(y + 6) +\n              'L' + Number(x(end) + 4) + ' ' + Number(y + 4) + ' L' + x(start) + ' ' + Number(y + 4) + ' Z'\n          }\n\n          var arrow = svg.append('path')\n                .attr('stroke', 'none')\n                .style('fill', '#000')\n\n          var text = svg.append('text')\n              .attr('y', 14)\n              .attr('dy', '.375em')\n              .style('fill', '#000')\n              .style('font-weight', '400')  \n\n          var xPos = scope.diff ? x(scope.level + scope.diff) : x(scope.level)\n          if (scope.level) svg.append('line')\n                .attr('x1', xPos)\n                .attr('y1', 4)\n                .attr('x2', xPos)\n                .attr('y2', 24)\n                .style('stroke', '#000')\n\n          if (scope.diff > 0) {\n            diffVal = scope.diff\n            d = x(scope.diff) - x(0)\n            diff\n              .attr('x', x(scope.level))\n              .attr('width', 0)\n              .transition()\n              .delay(300)\n              .duration(1000)\n                .attr('width', d)\n\n            arrow\n              .attr('d', rightArrow(scope.level, scope.level, 11))\n              .transition()\n              .delay(300)\n              .duration(1000)\n                .attr('d', rightArrow(scope.level, scope.level + scope.diff, 11))\n\n            text.text('+' + $filter('round1')(scope.diff))\n            var w = text.style('width').replace('px','')\n\n            text\n              .attr('text-anchor', 'start')\n              .attr('x', x(scope.level + scope.diff))\n              .attr('dx', 4)\n          } else if (scope.diff < 0) {\n            diffVal = scope.diff\n            d = x(-scope.diff) - x(0)\n            diff\n              .attr('x', x(scope.level))\n              .attr('width', 0)\n              .style('fill', Aspects.getColor(scope.name, 40))\n              .transition()\n              .delay(300)\n              .duration(1000)\n                .attr('x', x(scope.level) - d)\n                .attr('width', d)\n\n            arrow\n              .attr('d', leftArrow(scope.level, scope.level, 11))\n              .transition()\n              .delay(300)\n              .duration(1000)\n                .attr('d', leftArrow(scope.level, scope.level + scope.diff, 11))\n\n            text.text($filter('round1')(scope.diff))\n\n            text\n              .attr('text-anchor', 'end')\n              .attr('dx', -4)\n              .attr('x', x(scope.level + scope.diff))\n          } else if (diffVal > 0) {\n            d = x(diffVal) - x(0)\n            diff\n              .attr('x', x(scope.level))\n              .attr('width', d)\n              .transition()\n              .duration(1000)\n                .attr('width', 0)\n\n            // arrow\n            //   .attr('d', leftArrow(scope.level + diffVal, scope.level))\n            //   .transition()\n            //   .delay(300)\n            //   .duration(1000)\n            //     .attr('d', leftArrow(scope.level, scope.level))\n            //   .each('end', () => {\n            //     arrow.remove()\n            //   })\n          } else if (diffVal < 0) {\n            d = x(-diffVal) - x(0)\n            diff\n              .attr('x', x(scope.level) - d)\n              .attr('width', d)\n              .style('fill', Aspects.getColor(scope.name, 40))\n              .transition()\n              .delay(300)\n              .duration(1000)\n                .attr('x', x(scope.level))\n                .attr('width', 0)\n\n            // arrow\n            //   .attr('d', rightArrow(scope.level + diffVal, scope.level))\n            //   .transition()\n            //   .delay(300)\n            //   .duration(1000)\n            //     .attr('d', rightArrow(scope.level, scope.level))\n            //   .each('end', () => {\n            //     arrow.remove()\n            //   })\n          }\n        }\n      }\n    }\n  })\n  .directive('fix', function ($window) {\n    return {\n      restrict: 'EA',\n      scope: {},\n      link: function(scope, element, attrs) {\n        var div = d3.select(element[0])\n        var parent = d3.select(div[0][0].parentNode)\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        scope.render = function () {\n          var bounds = parent[0][0].getBoundingClientRect()\n          console.log(bounds, window.scrollLeft)\n          div.style({\n            'position': 'fixed',\n            'padding': parent.style('padding'),\n            'top': window.scrollTop ? bounds.top + window.scrollTop + 'px' : bounds.top + 'px',\n            'left': window.scrollLeft ? bounds.left + window.scrollLeft +  'px' : bounds.left + 'px',\n            'width': bounds.width + 'px'\n          })\n        }\n      }\n    }\n  })\n  .directive('prog', function ($window) {\n    return {\n      restrict: 'EA',\n      scope: {\n        complete: '='\n      },\n      link: function(scope, element, attrs) {\n         var svg = d3.select(element[0])\n          .append('svg')\n          .style('width', '100%')\n          .style('height', 8)\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        scope.$watch('complete', function () {\n          scope.render()\n        })\n\n        scope.render = function () {\n          svg.selectAll('*').remove()\n          var bounds = svg[0][0].getBoundingClientRect()\n          svg.append('rect')\n            .attr('height', 4)\n            .attr('width', bounds.width * scope.complete)\n            .attr('fill', '#559')\n        }\n      }\n    }\n  })\n  .directive('back', function (Aspects) {\n    return {\n      restrict: 'EA',\n      scope: {\n        name: '='\n      },\n      link: function(scope, element, attrs) {\n        scope.$watch('name', function (name) {\n          element[0].style.border = '1px solid ' + Aspects.getColor(name, 60)\n        })\n      }\n    }\n  })","/* Filters */\n\nangular.module('well.filters', [])\n  .filter('round2', function () {\n    return function (n) {\n      return Number(n).toFixed(2)\n    }\n  })\n  .filter('round1', function () {\n    return function (n) {\n      return n % 1 === 0 ? n : Number(n).toFixed(1)\n    }\n  })\n  .filter('percent', function () {\n    return function (n) {\n      return d3.format('%')(n)\n    }\n  })\n  .filter('capitalize', function () {\n    return function (string) {\n      return string ? string.charAt(0).toUpperCase() + string.slice(1) : ''\n    }\n  })\n","/* Services */\n\nangular.module('well.services', [])\n  .factory('User', function ($q, $rootScope, $location, $timeout) {\n    var user = this\n    this.firebase = new Firebase('https://well.firebaseio.com/')\n    \n    this.info = this.firebase.getAuth()\n\n    this.hashedEmail = email => \n      'wiaglif+' + CryptoJS.SHA3(email, { outputLength: 224 }).toString() + '@gmail.com'\n\n    this.signup = (email, password) => {\n      var deferred = $q.defer()\n\n      this.email = email\n      this.firebase.createUser({\n        email    : email, // this.hashedEmail(email)\n        password : password\n      }, error => {\n        if (error === null) {\n          console.log('User created successfully')\n          deferred.resolve()\n        } else {\n          console.log('Error creating user:', error)\n          deferred.reject(error)\n        }\n      })\n\n      return deferred.promise\n    }\n\n    this.login = (email, password) => {\n      var deferred = $q.defer()\n\n      this.email = email\n      this.firebase.authWithPassword({\n        email    : email, // this.hashedEmail(email)\n        password : password\n      }, (error, authData) => {\n        if (error === null) {\n          // user authenticated with Firebase\n          $timeout(function () {\n            user.info = authData\n          })\n          console.log('User ID: ' + authData.uid + ', Provider: ' + authData.provider)\n          deferred.resolve(authData)\n        } else {\n          console.log('Error authenticating user:', error)\n          deferred.reject(error)\n        }\n      })\n\n      return deferred.promise\n    }\n\n    this.firebase.onAuth(auth => {\n      $timeout(() => {\n        $rootScope.$broadcast('auth')\n        user.info = auth\n      })\n    })\n\n    this.unauth = () => {\n      this.firebase.unauth()\n      this.info = null\n    }\n\n    this.setAspects = aspects => {\n      this.firebase.onAuth(auth => {\n        if (auth) user.firebase.child('aspects/' + auth.uid).set(aspects, () => user.aspects = aspects)\n      })\n    }\n\n    this.getAspects = () => {\n      var deferred = $q.defer()\n      if (this.aspects) {\n        deferred.resolve(this.aspects)\n      } else {\n        this.firebase.onAuth(auth => {\n          if (auth) user.firebase.child('aspects/' + auth.uid)\n            .on('value', snapshot => {\n              user.aspects = snapshot.val()\n              deferred.resolve(snapshot.val()) \n            })\n        })\n      }\n      return deferred.promise\n    }\n\n    this.test = () => 'test'\n\n    this.addData = (module, data) => {\n      console.log(module, data)\n      this.firebase.onAuth(auth => {\n        console.log(auth)\n        if (auth) this.firebase.child('module/' + module + '/' + this.info.uid).push(data)\n      })\n    }\n\n    this.getData = (module, limit) => {\n      var deferred = $q.defer()\n      this.firebase.onAuth(auth => {\n        if (auth) this.firebase.child('module/' + module + '/' + this.info.uid)\n          .on('value', (snapshot) => deferred.resolve(snapshot.val()) )\n      })\n      return deferred.promise\n    }\n\n    return this\n  })\n  .factory('Aspects', function (User, $q, $location) {\n    this.texts = {\n      'Family Well-Being': 'the overall well-being of you and your family',\n      'Family Happiness': 'your and your family’s happiness',\n      'Health': 'your health (physical and mental)',\n      'Morality': 'your morality (that is, living up to your personal values)',\n      'Family Relationships': 'your family relationships',\n      'Financial Security': 'your financial security',\n      'Options & Possibilities': 'your options and possibilities in life',\n      'Meaning & Value': 'your sense that your life is meaningful and has value',\n      'Life Satisfaction': 'how satisfied you are with your life',\n      'Enough Time & Money': 'your feeling that you have enough time and money',\n      'Peace, Calm & Harmony': 'how peaceful, calm, and harmonious your life is',\n      'Independence': 'your feeling of independence and self-sufficiency',\n      'Making a Difference': 'your sense that you are making a difference in the world',\n      'Worthwileness': 'your feeling that the things you do are worthwhile',\n      'Safety & Security': 'your physical safety and security',\n      'Respect': 'your being treated with dignity and respect by others',\n      'Amount of Day Happy': 'how much of the time you feel happy',\n      'Improvement': 'your sense that things are getting better and better',\n      'Overall Happiness': 'how happy you are overall with your life',\n      'Life Longevity': 'your chance to live a long life'\n    }\n\n    var five = _.sample(Object.keys(this.texts), 5)\n    this.names = () => {\n      var deferred = $q.defer()\n      User.getAspects().then(aspects => {\n        var as\n        if ($location.path().split('/')[1].indexOf('overlap') !== -1) {\n          as = aspects.slice(0,3)\n        } else {\n          as = aspects\n        }\n        if (aspects) {\n          deferred.resolve(as)\n        } else {\n          User.setAspects(five)\n          deferred.resolve(as)\n        }\n      })\n      return deferred.promise\n    }\n\n    this.getColor = (aspect, level) => {\n      if (User.aspects) {\n        var h = (User.aspects.indexOf(aspect) + 6) * 70,\n          l =  .99 + (level / 100) * -.24\n        return d3.hsl(h, .8, l).toString()\n      }\n    }\n\n    return this\n  })\n  .factory('Style', function ($window) {\n    var sheet = (function() {\n      var style = document.createElement('style')\n\n      // Add a media (and/or media query) here if you'd like!\n      // style.setAttribute(\"media\", \"screen\")\n      // style.setAttribute(\"media\", \"@media only screen and (max-width : 1024px)\")\n\n      // WebKit hack :(\n      style.appendChild(document.createTextNode(''))\n\n      document.head.appendChild(style)\n\n      return style.sheet\n    })()\n\n    return function (selector, rules, index) {\n      if (sheet.insertRule) {\n        sheet.insertRule(selector + '{' + rules + '}', index);\n      } else {\n        sheet.addRule(selector, rules, index);\n      }\n    }\n  })\n  .factory('Slide', function () {\n    return function (element, duration) {\n      var neu = d3.select(element).style('opacity', '0')\n      var w = neu.style('width')\n\n      var old = neu.select(function() { return this.parentNode.insertBefore(this.cloneNode(true), this) })\n          .style('opacity', '1')\n\n      var parent = neu.select(function () { return this.parentNode })\n\n      parent.style('pointer-events', 'none')\n\n      old\n        .transition()\n          .duration(duration)\n          .style('left', '-' + w)\n          .style('opacity', '0')\n          .each('end', function () {\n            old.remove()\n            parent.style('pointer-events', 'auto')\n          })\n\n      neu\n        .transition()\n          .duration(duration)\n          .style('left', '-' + w)\n          .style('opacity', '1')\n          .each('end', function () {\n            neu.style('left', '0px')\n          })\n    }\n  })","angular.module('well.survey', [])\n  .controller('ResultsCtrl', function ($scope, Aspects, Survey, Choices, User) {\n    $scope.weights = Choices.weights()\n    $scope.aspects.sorted = _.sortBy($scope.aspects.names, function (n) {\n      return $scope.weights[n] * -1\n    })\n\n    $scope.data = User.getData('threetwo')\n    \n    // generate some dummy data for testing\n    if (!$scope.weights) {\n      $scope.weights = {}\n      _.each($scope.aspects.names, function (a) {\n        $scope.weights[a] = Math.random()\n      })\n      console.log($scope.weights)\n\n      var sumW = 0\n       _.each($scope.aspects.names, function (a) {\n        sumW += $scope.weights[a]\n      })\n\n      _.each($scope.aspects.names, function (a) {\n        $scope.weights[a] = $scope.weights[a] / sumW\n      })\n    }\n  })\n  .controller('SurveyCtrl', function ($scope, Aspects, Survey, Style, $location, $routeParams) {\n    Survey.reset()\n    Aspects.names().then(aspects => {\n      $scope.aspects.names = aspects\n      Survey.aspects = aspects\n    })\n\n    $scope.survey = {\n      finished: false\n    }\n\n    $scope.$watch('responses', function () {\n      if (Survey.responded()) {\n        $scope.survey.finished = true\n      }\n    }, true)\n\n    $scope.next = function () {\n      switch ($location.path().split('/')[1]) {\n        case 'threetwo':\n          $location.path('threetwo/abbcca')\n          break\n        case 'overlap':\n          $location.path('overlap/abac')\n          break\n        case 'fineoverlap':\n          $location.path('fineoverlap/tradeoff')\n          break\n      }\n    }\n  })\n  .factory('Survey', function (Aspects, $q) {\n    var survey = this\n    this.responses = {}\n\n    this.getResponses = () => {\n      var deferred = $q.defer()\n\n      if (this.aspects) {\n        deferred.resolve(survey.responses)\n      } else {\n        Aspects.names().then(aspects => {\n          survey.aspects = aspects\n          _.each(aspects, function (a) {\n            if (!survey.responses[a]) survey.responses[a] = null\n          })\n          deferred.resolve(survey.responses)\n        })\n      }\n      return deferred.promise\n    }\n\n    this.respond = (aspect, level) => this.responses[aspect] = level\n\n    this.responded = () => this.aspects && _.every(survey.aspects, a => survey.responses[a])\n\n    this.randomize = () => {\n      console.log('randomized')\n      var deferred = $q.defer()\n      this.getResponses().then(responses => {\n        Aspects.names().then(aspects => {\n          for (var i in aspects) {\n            survey.responses[aspects[i]] = Math.max( Math.ceil(Math.random() * 99), Math.max( Math.ceil(Math.random() * 99), Math.ceil(Math.random() * 99) ) )\n          }\n\n          deferred.resolve(survey.responses)\n        })\n      })\n      return deferred.promise\n    }\n\n    this.safeRandomize = () => {\n      if (this.responded()) { \n        return this.getResponses()\n      } else {\n        return this.randomize()\n      }\n    }\n\n    this.reset = () => {\n      if (this.aspects) _.each(survey.aspects, a => {\n        survey.responses[a] = null\n      })\n      return this.responses\n    }\n\n    return this\n  })","angular.module('well.tradeoff', [])\n  //\n  // --------------------------------------------------\n  //\n  //                  CONTROLLERS\n  //\n  // --------------------------------------------------\n  //\n  .controller('ThreeCtrl', function ($scope, Choices, Tradeoff, Three, Two, Slide, $location, $routeParams, $timeout) {\n    $scope.choice = {}\n    $scope.choices = Choices\n    $scope.tradeoff = Tradeoff\n\n    $scope.hidePreamble = () => {\n      Tradeoff.preamble = false\n      setTimeout(() => {\n        Three.loadChoice().then(choice => $scope.choice = choice)\n      }, 1)\n    }\n\n    if (!Tradeoff.preamble) Three.loadChoice().then(choice => {\n      $scope.choice = choice\n    })\n\n    $scope.choose = function (i) {\n      $scope.choice = Three.choose(i)\n      Slide('.options', 300)\n      $scope.animate = Math.random()\n    }\n\n    // the last choice returns false\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / (Three.numberOfQs + Two.numberOfQs)\n      if (!c) {\n        $location.path('threetwo/dbec')\n      }\n    })\n  })\n  .controller('TwoCtrl', function ($scope, Choices, Two, Three, Slide, User, $location) {\n    $scope.choice = true\n    $scope.choices = Choices\n\n    Two.loadChoice().then(choice => {\n      $scope.choice = choice\n    })\n\n    $scope.choose = function (i) {\n      $scope.choice = Two.choose(i)\n      Slide('.options', 300)\n    }\n\n    // the last choice returns false\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / (Three.numberOfQs + Two.numberOfQs)\n      if (!c) {\n        if (User.info.provider === 'password') {\n          // user is authenticated with email and password\n          Choices.submit()\n          $location.path('threetwo/exit')\n        } else {\n          $location.path('threetwo/exit')\n        }\n      }\n    })\n  })\n  .controller('TestCtrl', function ($scope, Choices, Two, Three, Slide, User, $location) {\n    $scope.choice = true\n    $scope.choices = Choices\n\n    $scope.options = {\n      one: 0,\n      two: 0,\n      choice: null,\n      highlight: n => {\n        if (!$scope.options.choice) {\n          if (n === 1) {\n            $scope.options.one = $scope.choice.tradeoff[0]\n            $scope.options.two = 0\n          } else {\n            $scope.options.two = $scope.choice.tradeoff[1]\n            $scope.options.one = 0\n          }\n        }\n      },\n      select: n => {\n        $scope.options.choice = n\n        if (n === 1) {\n          $scope.options.one = $scope.choice.tradeoff[0]\n          $scope.options.two = 0\n        } else {\n          $scope.options.two = $scope.choice.tradeoff[1]\n          $scope.options.one = 0\n        }\n      },\n      reset: () => {\n        if (!$scope.options.choice) $scope.options.one = $scope.options.two = 0\n      }\n    }\n\n    Two.loadChoice().then(choice => {\n      $scope.choice = choice\n    })\n\n    $scope.choose = function () {\n      var i = $scope.options.one ? $scope.choice.i *  2 + 1 : $scope.choice.i *  2 + 2\n      $scope.choice = Two.choose(i)\n      $scope.options.choice = null\n      $scope.options.reset()\n      Slide('.scenario', 300)\n    }\n\n    // the last choice returns false\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / Two.numberOfQs\n      if (!c) {\n        $location.path('threetwo/exit')\n      }\n    })\n\n  })\n  .controller('CompleteCtrl', function ($scope, User, Choices, $location) {\n    $scope.login = {\n      wrong: false,\n      placeholder: {\n        email: 'Enter your email',\n        password: 'Password'\n      },\n      submit: function() {\n        if (!$scope.login.email) {\n          $scope.login.wrong = 'INVALID_EMAIL'\n          $scope.login.placeholder.email = 'Enter a valid email'\n        } else if (!$scope.login.password) {\n          $scope.login.wrong = 'INVALID_PASSWORD'\n          $scope.login.placeholder.email = 'Enter a valid password'\n        } else {\n          User.login(this.email, this.password).then(function(user) {\n            $scope.login.wrong = 'in'\n            console.log('Logged in as: ', user.uid)\n            Choices.submit()\n            $location.path('results')\n          }, function(error) {\n            $scope.login.wrong = error.code\n            if (error.code === 'INVALID_EMAIL') {\n              $scope.login.email = ''\n              $scope.login.placeholder.email = 'Enter a valid email'\n            } else if (error.code === 'INVALID_PASSWORD') {\n              $scope.login.password = ''\n              $scope.login.placeholder.password = 'Enter a valid password'\n            }\n            console.error('Login failed: ', error)\n          })\n        }\n      }\n    }\n  })\n  //\n  // --------------------------------------------------\n  //\n  //                  SERVICES\n  //\n  // --------------------------------------------------\n  //\n  .factory('Tradeoff', function () {\n    var tradeoff = {}\n    // randomly decide whether to display positive or negative tradeoffs\n    tradeoff.sign = Math.random() > 0.5 ? 'positive' : 'negative'\n    console.log(tradeoff.sign)\n    tradeoff.preamble = Math.random() > 0.5\n    // 2 * i + 1 || 2 * i + 2\n    // Each tuple represents the change in Option 1 for aspect X and the change in Option 2 for aspect Y respectively \n    tradeoff.positive_tradeoffs = [         \n                                  [4,4],\n                    [1,4],                   [4,1],\n              [1,8],       [2,4],      [4,2],      [8,1],\n      // MRS range based on final tradeoff where each number represents the MRS of Y in terms of X as a power of 2\n      // <--- indicates relative pref for X   ---> indicates pref for Y\n      [-4,-3],[-3,-2],[-2,-1],[-1,0],[0,1],[1,2],[2,3],[3,4]\n    ]\n\n    // The negative tradeoffs have the reverse mapping as the positive ones\n    tradeoff.negative_tradeoffs = [         \n                            [-4,-4],\n              [-4,-1],                 [-1,-4],\n          [-8,-1],    [-4,-2],    [-2,-4],   [-1,-8],\n      [3,4],[2,3],[1,2],[0,1],[-1,0],[-2,-1],[-3,-2],[-4,-3]\n    ]\n\n    // where a and b are the rating levels for aspects a and b\n    tradeoff.checkCorners = function (a, b) {\n      if (a > 92 && b < 8) {\n        return 'skip'\n      } else if (a < 8 && b > 92) {\n        return 'skip'\n      } else if (a > 92 || b > 92) {\n        return 'negative'\n      } else if (a < 8 || b < 8) {\n        return 'positive'\n      } else {\n        return null\n      }\n    }\n\n    // where a and b are the rating levels for aspects a and b\n    tradeoff.values = function (a, b) {\n      var s = this.checkCorners(a, b) === null ? this.sign : this.checkCorners(a, b)\n      if (s === 'positive') {\n        return this.positive_tradeoffs\n      } else if (s === 'negative') {\n        return this.negative_tradeoffs\n      } else {\n        return 'skip'\n      }\n    }\n    return tradeoff\n  })\n  // The Choices service records decisions and generates MRS values / weights\n  .factory('Choices', function (Aspects, Survey, Tradeoff, User) {\n    var aspects\n    var choices = {\n      MRS: {}\n    }\n\n    Aspects.names().then(names => {\n      aspects = names\n      _.each(aspects, function (aspect) {\n        choices.MRS[aspect] = {}\n      })\n    })\n\n    choices.step = 0\n    choices.levels = Survey.responses\n    choices.sign = Tradeoff.sign\n    choices.skipped = []\n    choices.decisions = []\n\n    // add MRS value where d is the denomitar aspect, n the numerator and v the value as a power of 2\n    choices.addMRS = function (n, d, range) {\n      this.MRS[d][n] = (range[0] + range[1]) / 2\n      this.MRS[n][d] = (range[0] + range[1]) / -2\n    }\n\n    // compute the MRS value of aspect n in terms of d, assuming one step of transitivity if necessary\n    choices.getMRS = function (n, d) {\n      if (d === n) {\n        return 0\n      } else if (this.MRS[d][n]) {\n        return this.MRS[d][n]\n      } else if (Object.keys(this.MRS[d]).length) {\n        // check if there's an alternative route to n\n        var alt = _.find(Object.keys(choices.MRS[d]), function (alt) {\n          return choices.MRS[alt][n]\n        })\n        if (alt) {\n          return choices.MRS[d][alt] + choices.MRS[alt][n]\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    }\n\n    // records each decision\n    choices.record = function (pair, i) {\n      this.decisions.push({\n        aspects: pair,\n        i: i,\n        t: Date.now()\n      })\n\n      // if this is a final tradeoff\n      if (i > 6) {\n        // MRS of pair[1] in terms of pair[0]\n        this.addMRS(pair[1], pair[0], Tradeoff.values(this.levels[pair[0]], this.levels[pair[1]])[i])\n      }\n    }\n\n    choices.weights = function () {\n      var sum = 0\n      var ws = _.map(aspects, function (a) {\n        var mrs = choices.getMRS(a, aspects[0])\n        sum += Math.pow(2, mrs)\n        return Math.pow(2, mrs)\n      })\n\n      var weights = {}\n      _.each(aspects, function (aspect, i) {\n        weights[aspect] = ws[i] / sum\n      })\n      return weights\n    }\n\n    choices.submit = function () {\n      User.addData('threetwo', {\n        date: Date.now(),\n        aspects: aspects,\n        responses: choices.levels,\n        decisions: choices.decisions,\n        skipped: choices.skipped,\n        MRS: choices.MRS,\n        weights: choices.weights()\n      })\n    }\n\n    return choices\n  })\n  .factory('Three', function (Aspects, Survey, Tradeoff, Choices, $q) {\n    var three = this\n    this.pair = null\n    this.numberOfQs = 9\n    var aspects\n    var responses\n\n    this.choose = (i) => {\n      console.log(responses)\n      if (!i) {\n        i = 0\n        this.pair = this.pairs.shift()\n      } else {\n        Choices.record(this.pair, i)\n      }\n\n      if (i > 6) {\n        i = 0\n        if (this.pairs.length) {\n          this.pair = this.pairs.shift()\n        } else {\n          return false\n        }\n      }\n\n      var tradeoff = Tradeoff.values(responses[this.pair[0]], responses[this.pair[1]])\n\n      return three.choice = {\n        aspects: this.pair,\n        tradeoff: tradeoff[i],\n        i: i\n      }\n    }\n\n    this.loadChoice = () => {\n      var deferred = $q.defer()\n      Aspects.names().then(names => {\n        aspects = names\n        three.aspects = [aspects[0], aspects[1], aspects[2]]\n\n        Survey.safeRandomize().then(res => {\n          responses = res\n          three.pairs = _.map(three.aspects, function (aspect, i) {\n            return [three.aspects[i], three.aspects[(i + 1) % 3]]\n          })\n\n          three.pairs = _.filter(three.pairs, function (pair) {\n            var skip = Tradeoff.values(responses[pair[0]], responses[pair[1]]) === 'skip'\n            if (skip) Choices.skipped.push(pair)\n            return !skip\n          })\n\n          three.numberOfQs = three.pairs.length * 3\n          console.log(res, responses)\n          deferred.resolve(three.choose(0))\n        })\n      })\n      return deferred.promise\n    }\n\n    return this\n  })\n  .factory('Two', function (Aspects, Survey, Tradeoff, Choices, Three, $q) {\n    var aspects\n    var responses\n    if (!Survey.responded()) Survey.randomize()\n    var two = this\n    this.pair = null\n\n    this.numberOfQs = 6\n\n    this.choose = (i) => {\n      if (!i) {\n        i = 0\n        this.pair = this.pairs.shift()\n      } else {\n        Choices.record(this.pair, i)\n      }\n\n      if (i > 6) {\n        i = 0\n        if (this.pairs.length) {\n          this.pair = this.pairs.shift()\n        } else {\n          return false\n        }\n      }\n\n      var tradeoff = Tradeoff.values(responses[this.pair[0]], responses[this.pair[1]])\n      return {\n        aspects: this.pair,\n        tradeoff: tradeoff[i],\n        i: i\n      }\n    }\n\n    this.loadChoice = () => {\n      var deferred = $q.defer()\n      Aspects.names().then(names => {\n        aspects = names\n        two.aspects = _.difference(aspects, Three.aspects)\n\n        Survey.safeRandomize().then(res => {\n          responses = res\n          two.pairs = [ [aspects[3], aspects[1]], [aspects[4], aspects[2]] ] \n          two.pairs = _.filter(two.pairs, function (pair) {\n            var skip = Tradeoff.values(responses[pair[0]], responses[pair[1]]) === 'skip'\n            if (skip) Choices.skipped.push(pair)\n            return !skip\n          })\n\n          two.numberOfQs = two.pairs.length * 3\n          deferred.resolve(two.choose())\n        })\n      })\n\n      return deferred.promise\n    }\n\n    return this\n  })","angular.module('well.overlap', [])\n  .factory('Overlap', function (User, Aspects, Survey) {\n    var overlap = this\n    this.doubled = Math.random() > 0.5\n    this.preamble = Math.random() > 0.5\n    this.decisions = []\n    this.skipped = []\n\n    this.record = (decision) => {\n      this.decisions.push(decision)\n    }\n\n    this.submit = () => {\n      console.log('submit')\n      Aspects.names().then(aspects => {\n        Survey.getResponses().then(responses => {\n          console.log(aspects, responses)\n          User.addData('overlap', {\n            date: Date.now(),\n            aspects: aspects,\n            responses: responses,\n            decisions: overlap.decisions,\n            skipped: overlap.skipped\n          })\n        })\n      })\n    }\n\n    return overlap\n  })\n  .factory('Abc', function (Overlap, Choices, Tradeoff, Survey, Aspects, $q) {\n    var responses\n    var abc = {}\n    abc.MRS = {}\n\n    abc.positiveOK = function (a, b, c) {\n      return a < 93 && b < 93 && c < 93\n    }\n\n    abc.negativeOK = function (a, b, c) {\n      return a > 8 && b > 8 && c > 8\n    }\n\n    abc.getSign = function (a, b, c) {\n      var sign = Tradeoff.sign\n      if (sign === 'positive') {\n        if (this.positiveOK(a, b, c)) {\n          return 'positive'\n        } else if (this.negativeOK(a, b, c)) {\n          return 'negative'\n        } else {\n          return false\n        }\n      } else if (sign === 'negative') {\n        if (this.negativeOK(a, b, c)) {\n          return 'negative'\n        } else if (this.positiveOK(a, b, c)) {\n          return 'positive'\n        } else {\n          return false\n        }\n      }\n    }\n\n    abc.choose = function (i) {\n      Overlap.record({\n        aspects: abc.aspects,\n        i: i,\n        t: Date.now()\n      })\n\n      var sign = this.getSign(responses[abc.aspects[0]], responses[abc.aspects[1]], responses[abc.aspects[2]])\n      // check corner case and if tradeoff value > 8, i.e. [-8, -1] or [8, 1]\n      if (!sign || i > 6 || sign === 'negative' && i === 3 && Overlap.doubled || sign === 'positive' && i === 6 && Overlap.doubled) {\n        return false\n      } else if (sign === 'positive') {\n        return {\n          aspects: this.aspects,\n          tradeoff: Tradeoff.positive_tradeoffs[i],\n          i: i\n        }\n      } else if (sign === 'negative') {\n        return {\n          aspects: this.aspects,\n          tradeoff: Tradeoff.negative_tradeoffs[i],\n          i: i\n        }\n      }\n    }\n\n    abc.loadChoice = () => {\n      var deferred = $q.defer()\n      Aspects.names().then(aspects => {\n        abc.aspects = [aspects[0], aspects[1], aspects[2]]\n        _.each(abc.aspects, function (a) {\n          abc.MRS[a] = {}\n          _.each(abc.aspects, function (b) {\n            var mrs = Choices.getMRS(a, b)\n            // for testing set MRS to 0, i.e. 2^0\n            abc.MRS[a][b] = mrs ? mrs : 0\n          })\n        })\n\n        Survey.safeRandomize().then(res => {\n          responses = res\n          deferred.resolve(abc.choose(0))\n        })\n      })\n      return deferred.promise\n    }\n\n    return abc\n  })\n  .factory('Abac', function (Aspects, Survey, Overlap, Tradeoff, Choices, $q) {\n    var abac = this\n    this.pair = null\n    var aspects\n    var responses\n    if (!Survey.responded()) Survey.randomize()\n\n    this.choose = (i) => {\n      Overlap.record({\n        aspects: abac.aspects,\n        i: i,\n        t: Date.now()\n      })\n\n      if (!i) {\n        i = 0\n        this.pair = this.pairs.shift()\n      } else {\n        Choices.record(this.pair, i)\n      }\n\n      if (i > 6) {\n        i = 0\n        if (this.pairs.length) {\n          this.pair = this.pairs.shift()\n        } else {\n          return false\n        }\n      }\n\n      var tradeoff = Tradeoff.values(responses[this.pair[0]], responses[this.pair[1]])\n      \n      return abac.choice = {\n        aspects: this.pair,\n        tradeoff: tradeoff[i],\n        i: i\n      }\n    }\n\n    this.loadChoice = () => {\n      var deferred = $q.defer()\n      Aspects.names().then(names => {\n        aspects = names\n        abac.aspects = [aspects[0], aspects[1], aspects[2]]\n\n        Survey.getResponses().then(res => {\n          responses = res\n          abac.pairs = [\n            [aspects[0], aspects[1]],\n            [aspects[0], aspects[2]]\n          ]\n\n          abac.pairs = _.filter(abac.pairs, function (pair) {\n            var skip = Tradeoff.values(responses[pair[0]], responses[pair[1]]) === 'skip'\n            if (skip) Overlap.skipped.push(pair)\n            return !skip\n          })\n\n          abac.numberOfQs = abac.pairs.length * 3\n          deferred.resolve(abac.choose(0))\n        })\n      })\n      return deferred.promise\n    }\n\n    return this\n  })\n  .factory('Fine', function (Aspects, Survey, Overlap, Abc, $q, User) {\n    var fine = this\n    this.tuple = []\n    var aspects\n    var responses\n    this.done = {}\n    this.decisions = []\n    this.positive = null\n\n    this.choose = i => {\n      this.decisions.push({\n        tradeoff: this.tradeoff ? this.tradeoff : null,\n        choice: i,\n        t: Date.now()\n      })\n\n      if (this.tradeoff) this.done[this.tradeoff.toString()] = true\n\n      if (this.decisions.length > 16) {\n        this.submit()\n        return false\n      } else {\n        while (!this.tradeoff || this.done[this.tradeoff.toString()]) {\n          // randomly choose {A vs. C}, { B vs. C} and {A&B vs. C}\n          var tradeoff = this.positive === 'positive' ? _.sample([ [8,8,0], [8,0,8], [8,8,8] ]) : _.sample([ [-8,-8,0], [-8,0,-8], [-8,-8,-8] ])\n          console.log(tradeoff)\n          this.tradeoff = _.map(tradeoff, n => {\n            console.log(n)\n            return this.positive === 'positive' ? Math.ceil(Math.random() * n) : Math.floor(Math.random() * n)\n          })\n        }\n        return {\n          tradeoff: this.tradeoff \n        }\n      }\n    }\n\n    this.loadChoice = () => {\n      var deferred = $q.defer()\n      Aspects.names().then(names => {\n        Survey.safeRandomize().then(res => {\n          aspects = names\n          responses = res\n          this.positive = Abc.getSign(responses[aspects[0]], responses[aspects[1]], responses[aspects[2]])\n          console.log(this.positive)\n          deferred.resolve(fine.choose(0))\n        })\n      })\n      return deferred.promise\n    }\n\n    this.submit = () => {\n      console.log('submit')\n      Aspects.names().then(aspects => {\n        Survey.getResponses().then(responses => {\n          User.addData('fineoverlap', {\n            date: Date.now(),\n            aspects: aspects,\n            responses: responses,\n            decisions: this.decisions\n          })\n        })\n      })\n    }\n    return fine\n  })\n  .controller('AbacCtrl', function ($scope, Choices, Abac, Slide, $location) {\n    $scope.choice = {}\n    $scope.choices = Choices\n\n    Abac.loadChoice().then(choice => {\n      $scope.choice = choice\n    })\n\n    $scope.choose = function (i) {\n      $scope.choice = Abac.choose(i)\n      Slide('.options', 300)\n    }\n\n    // the last choice returns false\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / 9\n      if (!c) {\n        $location.path('overlap/abc')\n      }\n    })\n  })\n  .controller('AbcCtrl', function ($scope, Overlap, Abc, $location, Slide, Two, Abac, Choices) {\n    $scope.overlap = Overlap\n    $scope.abc = Abc\n    $scope.choice = true\n    if (Overlap.preamble) {\n      Abc.loadChoice().then(choice => $scope.choice = choice)\n    }\n\n    $scope.hidePreamble = () => {\n      Overlap.preamble = true\n      setTimeout(() => {\n        Abc.loadChoice().then(choice => $scope.choice = choice)\n      }, 1)\n    }\n\n    $scope.choose = function (i) {\n      $scope.choice = Abc.choose(i)\n      Slide('.options', 300)\n    }\n\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / 9\n      if (!c) {\n        Overlap.submit()\n        $location.path('overlap/exit')\n      }\n    })\n  })\n  .controller('FineCtrl', function ($scope, Overlap, Fine, $location, Slide, Two, Abac, Choices) {\n    $scope.overlap = Overlap\n    $scope.choice = true\n    Fine.loadChoice().then(choice => {\n      $scope.choice = choice\n    })\n\n    $scope.hidePreamble = () => {\n      Overlap.preamble = true\n      setTimeout(() => {\n        Fine.loadChoice().then(choice => $scope.choice = choice)\n      }, 1)\n    }\n\n    $scope.choose = function (i) {\n      $scope.choice = Fine.choose(i)\n      Slide('.options', 300)\n    }\n\n    $scope.$watch('choice', function (c) {\n      $scope.choices = Choices\n      $scope.completed = Choices.step++ / 12\n      if (!c) {\n        Fine.submit()\n        $location.path('fineoverlap/exit')\n      }\n    })\n  })","angular.module('well.results', [])\n  .directive('sicilian', function ($window, Aspects) {\n    return {\n      restrict: 'EA',\n      scope: {\n        responses: '=',\n        weights: '='\n      },\n      link: function(scope, element, attrs) {\n        var svg = d3.select(element[0])\n          .append('svg')\n          .attr('class', 'sicilian')\n          .style('width', '100%')\n\n        svg.style('height', svg.style('width'))\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          scope.render()\n        })\n\n        scope.$watch('responses', function () {\n          scope.render()\n        }, true)\n\n        scope.$watch('weights', function () {\n          scope.render()\n        }, true)\n\n        var sort = null\n        attrs.$observe('sort', function (s) {\n          sort = s\n        })\n\n        var names = Aspects.names()\n        //   weights = _.map(names, function (e, i) {\n        //     return Math.random()\n        //   }),\n        //   sum = _.reduce(weights, function (a, b) {\n        //     return a + b\n        //   }),\n        //   data = _.map(names, function (e, i) {\n        //     return {\n        //       name: e,\n        //       weight: weights[i] / sum\n        //     }\n        //   })\n\n        // data = _.sortBy(data, function (d) {\n        //   return d.weight * -1\n        // })\n\n\n        scope.render = function () {\n          var data = _.map(names, function (a) {\n            return {\n              name: a,\n              weight: scope.weights[a]\n            }\n          })\n          data = _.sortBy(data, function (d) {\n            if (sort === 'level') {\n              return scope.responses[d.name]\n            } else {\n              return d.weight * -1\n            }\n          })\n\n          svg.selectAll('*').remove()\n\n          var width = svg.style('width').replace('px','')\n\n          var g = svg.selectAll()\n              .data(data)\n            .enter().append('g')\n              .style('height', function (d) {\n                return d.weight * width\n              })\n\n          g.append('rect')\n              .attr('y', function (d) {\n                return _.reduce(data, function (a, b) {\n                  if (data.indexOf(b) >= data.indexOf(d)) {\n                    return a\n                  } else {\n                    return a + b.weight * width\n                  }\n                }, 0)\n              })\n              .attr('width', function (d) {\n                return width\n              })\n              .attr('height', function (d) {\n                return d.weight * width\n              })\n              .style('fill', function (d) {\n                return Aspects.getColor(d.name, 30)\n              })\n\n          g.append('rect')\n              .attr('y', function (d) {\n                return _.reduce(data, function (a, b) {\n                  if (data.indexOf(b) >= data.indexOf(d)) {\n                    return a\n                  } else {\n                    return a + b.weight * width\n                  }\n                }, 0)\n              })\n              .attr('width', function (d) {\n                return (scope.responses[d.name] / 100) * width\n              })\n              .attr('height', function (d) {\n                return d.weight * width\n              })\n              .style('fill', function (d) {\n                return Aspects.getColor(d.name, 140)\n              })\n\n          g.append('text')\n              .attr('class', 'weight')\n              .attr('y', function (d) {\n                return d.weight * width * 0.5 + _.reduce(data, function (a, b) {\n                  if (data.indexOf(b) >= data.indexOf(d)) {\n                    return a\n                  } else {\n                    return a + b.weight * width\n                  }\n                }, 0)\n              })\n              .attr('dy', '.5em')\n              .text(function (d) {\n                return d3.format('%')(d.weight)\n              })\n              \n        }\n      }\n    }\n  })\n  .directive('chart', function ($window, User) {\n    return {\n      restrict: 'EA',\n      scope: {\n      },\n      link: function(scope, element, attrs) {\n        var svg = d3.select(element[0]).append('svg')\n\n        window.onresize = function() {\n          scope.$apply()\n        }\n\n        scope.$watch(function() {\n          return angular.element($window)[0].innerWidth\n        }, function() {\n          if (data) scope.render()\n        })\n\n        var data\n        User.getData('threetwo').then(function (response) {\n          data = _.map(response, function (datum) {\n            var score = _.reduce(datum.aspects, function (memo, num) {\n              return memo + datum.responses[num] * datum.weights[num]\n            }, 0)\n            return {\n              score: score,\n              date: datum.date\n            }\n          })\n\n          if (data.length === 1) {\n            var before = _.clone(data[0])\n            before.date = data[0].date - 50000\n            var after = _.clone(data[0])\n            after.date = data[0].date + 50000\n            data = [before, data[0], after]\n          }\n          console.log(data)\n          scope.render()\n        })\n\n        scope.render = function () {\n          console.log(data)\n\n          svg.selectAll('*').remove()\n          var bounds = element[0].parentNode.getBoundingClientRect()\n          console.log(bounds)\n          var height = bounds.width / 3\n          var width = bounds.width\n\n          svg\n            .attr('width', width)\n            .attr('height', height)\n\n          var x = d3.time.scale()\n              .domain( [data[0].date, data[data.length - 1].date] )\n              .rangeRound([30, width - 30])\n\n          var y = d3.scale.linear()\n            .domain([0, 100])\n            .rangeRound([height - 30, 30])\n\n          var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient('bottom')\n\n          var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient('left')\n\n          svg.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0, ' + Number(height - 30) + ')')\n            .call(xAxis)\n\n          svg.append('g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(30,0)')\n            .call(yAxis)\n\n          var line = d3.svg.line()\n            .x(function(d) { return x(d.date) })\n            .y(function(d) { return y(d.score) })\n            .interpolate('basis')\n\n          svg.append('path')\n            .attr('class', 'line')\n            .datum(data)\n            .attr('d', line)\n        }\n      }\n    }\n  })\n  .controller('ExitCtrl', function ($scope, User, $location) {\n    $scope.satisfaction = {\n      level: null,\n      comments: null,\n      submitted: false,\n      submit: () => {\n        $scope.satisfaction.submitted = true\n        User.addData('feedback', {\n          t: Date.now(),\n          module: $location.path().split('/')[1],\n          level: $scope.satisfaction.level,\n          comments: $scope.satisfaction.comments\n        })\n      }\n    }\n  })"],"sourceRoot":"/source/"}